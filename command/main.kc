JMP main
import "/lib/fs.kc"
import "/lib/print.kc"

function main(drive, partition)
(s[STRING], buf{256}, argv[128 *! STRING], file{FILE}, cwd{FILE}, ocwd{FILE}, spl[STRING], pat[STRING], patbuf{256}, state, argc, n, o, cd)
{
    s[STRINGPTR] = buf;
    pat[STRINGPTR] = patbuf;
    pat[STRINGLEN] = 6;
    memcpy(patbuf, ":80;0/"[STRINGPTR], pat[STRINGLEN], -1);
    if (!openat(0, pat, cwd))
    {
        print("what in gods name?\r\n");
        CLI HLT
    }
    while (1)
    {
.c:
        format(print, "%s>", pat);
        input(s, 256);
        state = 0;
        argc = 0;
        while (strtok(s, ' ', spl, &state))
        {
            if (spl[STRINGLEN] != 0)
            {
                if (spl[STRINGPTR]{0} = '"')
                {
                    n = spl[STRINGPTR] - s[STRINGPTR] + 1;
                    o = n - 1;
                    while (n <! s[STRINGLEN] and s[STRINGPTR]{n} != '"') n = n + 1;
                    spl[STRINGPTR] = s[STRINGPTR] + o + 1;
                    spl[STRINGLEN] = n - o - 1;
                    state = n + 1;
                }
                argv[argc *! STRING + STRINGLEN] = spl[STRINGLEN];
                argv[argc *! STRING + STRINGPTR] = spl[STRINGPTR];
                argc = argc + 1;
            }
        }
        if (argc = 0) JMP .c
        if (stricmp(argv, "CD"))
        {
            if (argc = 1) cd = ":80;0/";
            else cd = argv + STRING *! 2;
            memcpy(ocwd, cwd, FILE, -1);
            if (!openat(cwd, cd, cwd))
            {
                format(print, "Directory '%s' not found.\r\n", cd);
                memcpy(cwd, ocwd, FILE, -1);
            }
            else path_append(pat, cd);
            JMP .c
        }
        else if (stricmp(argv, "EXIT"))
        {
            MOV SP, BP
            POP BP
            RETF
        }
        if (!openat(cwd, argv, file))
        {
            format(print, "File '%s' not found.\r\n", argv);
            JMP .c
        }
        exec(file, argc, argv, pat);
    }
}
