include "compiler/tokenizer.kc"

struct {COMPILER} = TOKENIZER{CTOK}, MAP{CIDENTS}, [CBIN], [CEBP], [CCUR_FILE];
struct {COMPILER_IDENT} = [COMPILER_IDENT_ADDR];

function compiler_init(c)
{
    c[CEBP] = 0;
    c[CCUR_FILE] = "None";
    if (!map_init(&c{CIDENTS}, 1024, STRING *! 4, COMPILER_IDENT, strcmp, hash_string, NULL)) return FALSE;
    return TRUE;
}

function compiler_die(c, file, line)
{
    format(print, ", compiler died at %s(%x) in file %s\n", file, line, c[CCUR_FILE]);

    MOV EDI, [c]
    MOV EAX, [EDI + CEBP *! 4]
    TEST EAX, EAX
    JZ .ret
    MOV ESP, EAX
.ret:
    return 0;
}

function compile(c, filename, src)
{
    MOV EAX, [c]
    MOV [EAX + CEBP], EBP
    c[CCUR_FILE] = filename;
    format(print, "%s: %s\n", filename, src);
    c[CEBP] = 0;
    return NULL;
}

function compiler_const_set(c, name, address)
{
    if (!map_set(&c{CIDENTS}, name, &address)) return compiler_die(c, $@, $*, format(print, "map_set(\"%s\", %x) failed", name, address));
    return TRUE;
}